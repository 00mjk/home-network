masters:
  - root@192.168.200.10
nodes:
  - ubuntu@192.168.200.10
  - ubuntu@192.168.200.11
loglevel: trace
pod_network_cidr: 10.244.0.0/16
resources:
  - name: flannel
    file: https://raw.githubusercontent.com/coreos/flannel/v0.12.0/Documentation/kube-flannel.yml
  - name: flannel-rbac
    file: https://raw.githubusercontent.com/coreos/flannel/v0.12.0/Documentation/k8s-manifests/kube-flannel-rbac.yml
  - name: dashboard
    file: https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
  - name: metrics-server
    file: https://raw.githubusercontent.com/Eagerod/home-network/9b54ad7ca495b8b64cdd6bcfa974688b7e39e711/metrics-server.yaml
  - name: personal-service-account
    inline: |
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: aleem
        namespace: kube-system
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: aleem
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: aleem
        namespace: kube-system
  - name: load-balancer-namespace
    file: https://raw.githubusercontent.com/metallb/metallb/v0.8.3/manifests/namespace.yaml
  - name: load-balancer
    file: https://raw.githubusercontent.com/metallb/metallb/v0.8.3/manifests/metallb.yaml
  - name: load-balancer-config
    inline: |
      apiVersion: v1
      kind: ConfigMap
      metadata:
        namespace: metallb-system
        name: config
      data:
        config: |
          address-pools:
          - name: default
            protocol: layer2
            addresses:
            - 192.168.200.32-192.168.200.224     
  - name: ingress-controller
    file: https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-0.32.0/deploy/static/provider/baremetal/deploy.yaml
  - name: ingress-controller-service
    inline: |
      apiVersion: v1
      kind: Service
      metadata:
        name: nginx-ingress
        labels:
          app: nginx-ingress
        namespace: ingress-nginx
      spec:
        ports:
        - port: 80
          name: http
          protocol: TCP
        - port: 443
          name: https
          protocol: TCP
        type: LoadBalancer
        loadBalancerIP: 192.168.200.128
        selector:
          app.kubernetes.io/name: ingress-nginx
      ---
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: ingress-nginx-controller
        namespace: ingress-nginx
      data:
        http-redirect-code: "302"
  - name: kubernetes-dashboard-ingress
    inline: |
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        namespace: kube-system
        name: dashboard-ingress-redirect
        annotations:
          kubernetes.io/ingress.class: "nginx"
          nginx.ingress.kubernetes.io/temporal-redirect: https://dashboard.internal.aleemhaji.com
      spec:
        rules:
          - host: dashboard
          - host: dashboard.home
      ---
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        namespace: kube-system
        name: dashboard-ingress
        annotations:
          kubernetes.io/ingress.class: "nginx"
          nginx.ingress.kubernetes.io/backend-protocol: "https"
      spec:
        tls:
          - hosts:
              - dashboard.internal.aleemhaji.com
            secretName: internal-certificate-files
        rules:
          - host: dashboard.internal.aleemhaji.com
            http:
              paths:
                - path: /
                  backend:
                    serviceName: kubernetes-dashboard
                    servicePort: 443
  - name: docker-registry-secrets
    inline: |
      apiVersion: v1
      data:
        .dockerconfigjson: ${DOCKER_CONFIG_JSON_FILE_CONTENTS_BASE64}
      kind: Secret
      metadata:
        name: ${DOCKER_REGISTRY_HOSTNAME}
      type: kubernetes.io/dockerconfigjson
      ---
      apiVersion: v1
      data:
        htpasswd: ${DOCKER_HTPASSWD_FILE_CONTENTS_BASE64}
      kind: Secret
      metadata:
        name: ${DOCKER_REGISTRY_HOSTNAME}-htpasswd
  - name: docker-registry
    file: registry/registry.yaml
  - name: trilium
    file: trilium/trilium.yaml
